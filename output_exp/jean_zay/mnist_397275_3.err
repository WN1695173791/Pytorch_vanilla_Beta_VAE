Loading pytorch-gpu/py3/1.6.0
  Loading requirement: gcc/8.3.1 cuda/10.2 nccl/2.6.4-1-cuda
    cudnn/7.6.5.32-cuda-10.2 intel-mkl/2020.1 magma/2.5.3-cuda
    openmpi/4.0.2-cuda
++ sed -n 3p parameters_combinations/mnist_classifier_ratio.txt
+ LINE='--dataset mnist --model CNN --gpu_devices 0 1 --max_iter 50 --batch_size 250 --ckpt_dir checkpoints_CNN --ckpt_dir_scores checkpoint_scores_CNN --use_scheduler True --GMP True --lr 1e-3 --z_struct_size 32 --add_classification_layer True --classif_layer_size 30  --is_default_model False --is_custom_model False --is_custom_model_BK True --big_kernel_size 8 --two_conv_layer True --three_conv_layer False --BK_in_first_layer True --BK_in_second_layer False --BK_in_third_layer False --stride_size 1 --hidden_filters_layer1 32 --hidden_filters_layer2 32 --hidden_filters_layer3 32 --ratio_reg False --lambda_ratio_reg 1 --lambda_class 1 --other_ratio False --loss_min_distance_cl False --lambda_var_distance 1 --intra_class_variance_loss False --lambda_intra_class_var 1 --contrastive_loss False --lambda_contrastive_loss 1 --alpha 32 --loss Proxy_Anchor --optimizer adamw --mrg 0.1 --IPC False --warm 1 --sz_embedding 32 --dataset_balanced True --loss_distance_mean False --lambda_distance_mean 1 --value_target_distance_mean 10 --diff_var False --lambda_var_intra 1 --lambda_var_inter 1 --decoder_first_dense 25 --decoder_n_filter_1 64 --decoder_n_filter_2 64 --decoder_kernel_size_1 4 --decoder_kernel_size_2 3 --decoder_kernel_size_3 4 --decoder_stride_1 2 --decoder_stride_2 2 --decoder_stride_3 1 --use_decoder True --exp_name mnist_balanced_dataset_baseline_decoder_2'
+ echo --dataset mnist --model CNN --gpu_devices 0 1 --max_iter 50 --batch_size 250 --ckpt_dir checkpoints_CNN --ckpt_dir_scores checkpoint_scores_CNN --use_scheduler True --GMP True --lr 1e-3 --z_struct_size 32 --add_classification_layer True --classif_layer_size 30 --is_default_model False --is_custom_model False --is_custom_model_BK True --big_kernel_size 8 --two_conv_layer True --three_conv_layer False --BK_in_first_layer True --BK_in_second_layer False --BK_in_third_layer False --stride_size 1 --hidden_filters_layer1 32 --hidden_filters_layer2 32 --hidden_filters_layer3 32 --ratio_reg False --lambda_ratio_reg 1 --lambda_class 1 --other_ratio False --loss_min_distance_cl False --lambda_var_distance 1 --intra_class_variance_loss False --lambda_intra_class_var 1 --contrastive_loss False --lambda_contrastive_loss 1 --alpha 32 --loss Proxy_Anchor --optimizer adamw --mrg 0.1 --IPC False --warm 1 --sz_embedding 32 --dataset_balanced True --loss_distance_mean False --lambda_distance_mean 1 --value_target_distance_mean 10 --diff_var False --lambda_var_intra 1 --lambda_var_inter 1 --decoder_first_dense 25 --decoder_n_filter_1 64 --decoder_n_filter_2 64 --decoder_kernel_size_1 4 --decoder_kernel_size_2 3 --decoder_kernel_size_3 4 --decoder_stride_1 2 --decoder_stride_2 2 --decoder_stride_3 1 --use_decoder True --exp_name mnist_balanced_dataset_baseline_decoder_2
+ python3 -u main.py --dataset mnist --model CNN --gpu_devices 0 1 --max_iter 50 --batch_size 250 --ckpt_dir checkpoints_CNN --ckpt_dir_scores checkpoint_scores_CNN --use_scheduler True --GMP True --lr 1e-3 --z_struct_size 32 --add_classification_layer True --classif_layer_size 30 --is_default_model False --is_custom_model False --is_custom_model_BK True --big_kernel_size 8 --two_conv_layer True --three_conv_layer False --BK_in_first_layer True --BK_in_second_layer False --BK_in_third_layer False --stride_size 1 --hidden_filters_layer1 32 --hidden_filters_layer2 32 --hidden_filters_layer3 32 --ratio_reg False --lambda_ratio_reg 1 --lambda_class 1 --other_ratio False --loss_min_distance_cl False --lambda_var_distance 1 --intra_class_variance_loss False --lambda_intra_class_var 1 --contrastive_loss False --lambda_contrastive_loss 1 --alpha 32 --loss Proxy_Anchor --optimizer adamw --mrg 0.1 --IPC False --warm 1 --sz_embedding 32 --dataset_balanced True --loss_distance_mean False --lambda_distance_mean 1 --value_target_distance_mean 10 --diff_var False --lambda_var_intra 1 --lambda_var_inter 1 --decoder_first_dense 25 --decoder_n_filter_1 64 --decoder_n_filter_2 64 --decoder_kernel_size_1 4 --decoder_kernel_size_2 3 --decoder_kernel_size_3 4 --decoder_stride_1 2 --decoder_stride_2 2 --decoder_stride_3 1 --use_decoder True --exp_name mnist_balanced_dataset_baseline_decoder_2
--- Logging error ---
Traceback (most recent call last):
  File "/gpfslocalsup/pub/anaconda-py3/2020.02/envs/pytorch-gpu-1.6.0/lib/python3.7/logging/__init__.py", line 1025, in emit
    msg = self.format(record)
  File "/gpfslocalsup/pub/anaconda-py3/2020.02/envs/pytorch-gpu-1.6.0/lib/python3.7/logging/__init__.py", line 869, in format
    return fmt.format(record)
  File "/gpfslocalsup/pub/anaconda-py3/2020.02/envs/pytorch-gpu-1.6.0/lib/python3.7/logging/__init__.py", line 611, in format
    s = self.formatMessage(record)
  File "/gpfslocalsup/pub/anaconda-py3/2020.02/envs/pytorch-gpu-1.6.0/lib/python3.7/logging/__init__.py", line 580, in formatMessage
    return self._style.format(record)
  File "/gpfslocalsup/pub/anaconda-py3/2020.02/envs/pytorch-gpu-1.6.0/lib/python3.7/logging/__init__.py", line 422, in format
    return self._fmt % record.__dict__
KeyError: 'asc_time'
Call stack:
  File "main.py", line 258, in <module>
    main(args)
  File "main.py", line 30, in main
    net = SolverClassifier(arguments)
  File "/gpfsdswork/projects/rech/rjg/uiu23ko/Thesis/Pytorch_vanilla_Beta_VAE/solver_classifier.py", line 323, in __init__
    self.test_loader_size))
Message: 'Dataset mnist: train with 60000 samples and 10000 test samples'
Arguments: ()
  0%|          | 0/50.0 [00:00<?, ?it/s]Traceback (most recent call last):
  File "main.py", line 258, in <module>
    main(args)
  File "main.py", line 33, in main
    net.train()
  File "/gpfsdswork/projects/rech/rjg/uiu23ko/Thesis/Pytorch_vanilla_Beta_VAE/solver_classifier.py", line 586, in train
    self.mse_loss = F.mse_loss(x_recons, data)
  File "/gpfslocalsup/pub/anaconda-py3/2020.02/envs/pytorch-gpu-1.6.0/lib/python3.7/site-packages/torch/nn/functional.py", line 2647, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/gpfslocalsup/pub/anaconda-py3/2020.02/envs/pytorch-gpu-1.6.0/lib/python3.7/site-packages/torch/functional.py", line 65, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)
RuntimeError: The size of tensor a (28) must match the size of tensor b (32) at non-singleton dimension 3
  2%|‚ñè         | 1/50.0 [00:02<01:41,  2.08s/it]
+ wait
+ echo 'All done !'
