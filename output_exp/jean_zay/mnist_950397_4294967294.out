use 1 gpu who named: Tesla V100-SXM2-32GB
________________------------------mnist_binary_ES_15_BAGMP_Hmg_dst_5-----------------_____________________
Encoder_struct(
  (encoder_struct): Sequential(
    (0): Conv2d(1, 64, kernel_size=(8, 8), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Conv2d(64, 64, kernel_size=(4, 4), stride=(1, 1))
    (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU(inplace=True)
    (6): Conv2d(64, 15, kernel_size=(4, 4), stride=(1, 1))
    (7): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU(inplace=True)
    (9): AdaptiveMaxPool2d(output_size=(1, 1))
    (10): View()
    (11): DeterministicBinaryActivation(
      (act): Hardsigmoid(
        (act): Hardtanh(min_val=-1.0, max_val=1.0)
      )
    )
    (12): Linear(in_features=15, out_features=10, bias=True)
  )
)
Compute all binary encoder struct values:
class 0: unique code: 980/980. In percent: 1.0
class 1: unique code: 1135/1135. In percent: 1.0
class 2: unique code: 1032/1032. In percent: 1.0
class 3: unique code: 1010/1010. In percent: 1.0
class 4: unique code: 982/982. In percent: 1.0
class 5: unique code: 892/892. In percent: 1.0
class 6: unique code: 958/958. In percent: 1.0
class 7: unique code: 1028/1028. In percent: 1.0
class 8: unique code: 974/974. In percent: 1.0
class 9: unique code: 1009/1009. In percent: 1.0
class 0: Average distance Hamming: tensor([8.9454])
class 1: Average distance Hamming: tensor([8.8297])
