Loading pytorch-gpu/py3/1.6.0
  Loading requirement: gcc/8.3.1 cuda/10.2 nccl/2.6.4-1-cuda
    cudnn/7.6.5.32-cuda-10.2 intel-mkl/2020.1 magma/2.5.3-cuda
    openmpi/4.0.2-cuda
++ sed -n 1p parameters_combinations/mnist_classifier_ratio.txt
+ LINE='--dataset mnist --model CNN --gpu_devices 0 1 --max_iter 100 --batch_size 128 --ckpt_dir checkpoints_CNN --ckpt_dir_scores checkpoint_scores_CNN --use_scheduler True --GMP True --lr 1e-3 --z_struct_size 20 --add_classification_layer True --classif_layer_size 30  --is_default_model False --is_custom_model False --is_custom_model_BK True --big_kernel_size 8 --two_conv_layer True --three_conv_layer False --BK_in_first_layer True --BK_in_second_layer False --BK_in_third_layer False --stride_size 1 --hidden_filters_layer1 32 --hidden_filters_layer2 32 --hidden_filters_layer3 32 --ratio_reg True --lambda_ratio_reg 1 --lambda_class 1 --expe_name CNN_mnist_custom_BK_2layer_bk1_20_ratio_1'
+ echo --dataset mnist --model CNN --gpu_devices 0 1 --max_iter 100 --batch_size 128 --ckpt_dir checkpoints_CNN --ckpt_dir_scores checkpoint_scores_CNN --use_scheduler True --GMP True --lr 1e-3 --z_struct_size 20 --add_classification_layer True --classif_layer_size 30 --is_default_model False --is_custom_model False --is_custom_model_BK True --big_kernel_size 8 --two_conv_layer True --three_conv_layer False --BK_in_first_layer True --BK_in_second_layer False --BK_in_third_layer False --stride_size 1 --hidden_filters_layer1 32 --hidden_filters_layer2 32 --hidden_filters_layer3 32 --ratio_reg True --lambda_ratio_reg 1 --lambda_class 1 --expe_name CNN_mnist_custom_BK_2layer_bk1_20_ratio_1
+ python3 -u main.py --dataset mnist --model CNN --gpu_devices 0 1 --max_iter 100 --batch_size 128 --ckpt_dir checkpoints_CNN --ckpt_dir_scores checkpoint_scores_CNN --use_scheduler True --GMP True --lr 1e-3 --z_struct_size 20 --add_classification_layer True --classif_layer_size 30 --is_default_model False --is_custom_model False --is_custom_model_BK True --big_kernel_size 8 --two_conv_layer True --three_conv_layer False --BK_in_first_layer True --BK_in_second_layer False --BK_in_third_layer False --stride_size 1 --hidden_filters_layer1 32 --hidden_filters_layer2 32 --hidden_filters_layer3 32 --ratio_reg True --lambda_ratio_reg 1 --lambda_class 1 --expe_name CNN_mnist_custom_BK_2layer_bk1_20_ratio_1
--- Logging error ---
Traceback (most recent call last):
  File "/gpfslocalsup/pub/anaconda-py3/2020.02/envs/pytorch-gpu-1.6.0/lib/python3.7/logging/__init__.py", line 1025, in emit
    msg = self.format(record)
  File "/gpfslocalsup/pub/anaconda-py3/2020.02/envs/pytorch-gpu-1.6.0/lib/python3.7/logging/__init__.py", line 869, in format
    return fmt.format(record)
  File "/gpfslocalsup/pub/anaconda-py3/2020.02/envs/pytorch-gpu-1.6.0/lib/python3.7/logging/__init__.py", line 611, in format
    s = self.formatMessage(record)
  File "/gpfslocalsup/pub/anaconda-py3/2020.02/envs/pytorch-gpu-1.6.0/lib/python3.7/logging/__init__.py", line 580, in formatMessage
    return self._style.format(record)
  File "/gpfslocalsup/pub/anaconda-py3/2020.02/envs/pytorch-gpu-1.6.0/lib/python3.7/logging/__init__.py", line 422, in format
    return self._fmt % record.__dict__
KeyError: 'asc_time'
Call stack:
  File "main.py", line 204, in <module>
    main(args)
  File "main.py", line 30, in main
    net = SolverClassifier(arguments)
  File "/gpfsdswork/projects/rech/rjg/uiu23ko/Thesis/Pytorch_vanilla_Beta_VAE/solver_classifier.py", line 139, in __init__
    self.test_loader_size))
Message: 'Train mnist with 60000 train samples, 0 valid samples and 10000 test samples'
Arguments: ()
  0%|          | 0/100.0 [00:00<?, ?it/s]  2%|▏         | 2/100.0 [00:01<00:57,  1.70it/s] 10%|█         | 10/100.0 [00:01<00:37,  2.40it/s] 18%|█▊        | 18/100.0 [00:01<00:24,  3.38it/s] 26%|██▌       | 26/100.0 [00:01<00:15,  4.74it/s] 34%|███▍      | 34/100.0 [00:01<00:10,  6.60it/s] 42%|████▏     | 42/100.0 [00:01<00:06,  9.08it/s] 50%|█████     | 50/100.0 [00:01<00:04, 12.33it/s] 58%|█████▊    | 58/100.0 [00:01<00:02, 16.46it/s] 66%|██████▌   | 66/100.0 [00:02<00:01, 21.52it/s] 74%|███████▍  | 74/100.0 [00:02<00:00, 27.40it/s] 82%|████████▏ | 82/100.0 [00:02<00:00, 33.88it/s] 90%|█████████ | 90/100.0 [00:02<00:00, 40.54it/s] 98%|█████████▊| 98/100.0 [00:02<00:00, 47.03it/s]106it [00:02, 53.05it/s]                          114it [00:02, 58.33it/s]122it [00:02, 62.61it/s]130it [00:02, 66.08it/s]138it [00:02, 68.77it/s]146it [00:03, 70.76it/s]154it [00:03, 72.21it/s]162it [00:03, 73.24it/s]170it [00:03, 73.96it/s]178it [00:03, 74.37it/s]186it [00:03, 74.51it/s]194it [00:03, 74.71it/s]202it [00:03, 74.85it/s]210it [00:03, 74.89it/s]218it [00:04, 75.02it/s]226it [00:04, 75.13it/s]234it [00:04, 74.86it/s]242it [00:04, 75.14it/s]250it [00:04, 75.35it/s]258it [00:04, 75.51it/s]266it [00:04, 75.61it/s]274it [00:04, 75.66it/s]282it [00:04, 75.63it/s]290it [00:04, 75.53it/s]298it [00:05, 75.56it/s]306it [00:05, 75.62it/s]314it [00:05, 75.70it/s]322it [00:05, 75.72it/s]330it [00:05, 75.80it/s]338it [00:05, 75.86it/s]346it [00:05, 75.86it/s]354it [00:05, 75.88it/s]362it [00:05, 75.87it/s]370it [00:06, 75.88it/s]378it [00:06, 75.91it/s]386it [00:06, 75.92it/s]394it [00:06, 75.95it/s]402it [00:06, 75.90it/s]410it [00:06, 75.91it/s]418it [00:06, 75.96it/s]426it [00:06, 75.96it/s]434it [00:06, 75.98it/s]442it [00:06, 75.66it/s]450it [00:07, 75.30it/s]458it [00:07, 74.97it/s]466it [00:07, 74.43it/s]Traceback (most recent call last):
  File "main.py", line 204, in <module>
    main(args)
  File "main.py", line 33, in main
    net.train()
  File "/gpfsdswork/projects/rech/rjg/uiu23ko/Thesis/Pytorch_vanilla_Beta_VAE/solver_classifier.py", line 296, in train
    self.nb_class)
  File "/gpfsdswork/projects/rech/rjg/uiu23ko/Thesis/Pytorch_vanilla_Beta_VAE/solver_classifier.py", line 39, in compute_scores_and_loss
    return_results=True)
  File "/gpfsdswork/projects/rech/rjg/uiu23ko/Thesis/Pytorch_vanilla_Beta_VAE/visualizer_CNN.py", line 83, in compute_z_struct
    z_struct_batch = z_struct.squeeze().detach().numpy()
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
469it [00:12, 37.22it/s]
+ echo 'All Done!'
+ wait
